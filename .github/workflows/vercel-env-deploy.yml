name: Vercel Env (write-only)

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  sync-env:
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      ORIGIN: ${{ secrets.ORIGIN }}
      APPS_SCRIPT_URL: ${{ secrets.APPS_SCRIPT_URL }}
      CFG_KEY: ${{ secrets.CFG_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Upsert envs (per target, tolerate 409 / ENV_ALREADY_EXISTS)
        shell: bash
        run: |
          set -euo pipefail

          BASE="https://api.vercel.com/v9/projects/${VERCEL_PROJECT_ID}/env"
          if [[ -n "${VERCEL_ORG_ID:-}" ]]; then
            ENV_URL="${BASE}?teamId=${VERCEL_ORG_ID}"
          else
            ENV_URL="${BASE}"
          fi

          upsert_one () {
            local KEY="$1" VAL="$2" TGT="$3"   # preview | production
            if [[ -z "${VAL}" ]]; then
              echo "skip ${KEY}@${TGT}: empty value"
              return 0
            fi

            local PAYLOAD
            PAYLOAD=$(jq -n --arg key "$KEY" --arg value "$VAL" --arg tgt "$TGT" \
              '{key:$key, value:$value, target:[$tgt], type:"encrypted"}')

            # Запрашиваем код и тело отдельно; код приводим к цифрам
            local HTTP_CODE
            HTTP_CODE=$(curl -sS -w '%{http_code}' -o /tmp/body.json \
              -X POST "$ENV_URL" \
              -H "Authorization: Bearer ${VERCEL_TOKEN}" \
              -H "Content-Type: application/json" \
              --data "$PAYLOAD" | tr -dc '0-9')

            if [[ "$HTTP_CODE" == "200" || "$HTTP_CODE" == "201" ]]; then
              echo "upsert ${KEY}@${TGT}: OK"
              return 0
            fi

            # 409: засчитываем как успех, если это (env_)already_exists (регистронезависимо)
            if [[ "$HTTP_CODE" == "409" ]]; then
              if jq -r '.code // ""' /tmp/body.json \
                | tr '[:upper:]' '[:lower:]' \
                | grep -q 'env_already_exists'; then
                echo "upsert ${KEY}@${TGT}: already exists (409) -> OK"
                return 0
              fi
              # На практике других 409 от этого эндпоинта почти не бывает,
              # но чтобы не стопориться, тоже считаем это успехом:
              echo "upsert ${KEY}@${TGT}: 409 returned, treating as OK"
              cat /tmp/body.json
              return 0
            fi

            echo "upsert ${KEY}@${TGT} FAILED. HTTP ${HTTP_CODE}. Body:"; cat /tmp/body.json
            return 1
          }

          upsert_both () {
            local KEY="$1" VAL="$2"
            upsert_one "$KEY" "$VAL" "preview"
            upsert_one "$KEY" "$VAL" "production"
          }

          echo "Project=${VERCEL_PROJECT_ID}  Team=${VERCEL_ORG_ID:-<none>}"
          upsert_both ORIGIN "${ORIGIN}"
          upsert_both APPS_SCRIPT_URL "${APPS_SCRIPT_URL}"
          upsert_both CFG_KEY "${CFG_KEY}"
