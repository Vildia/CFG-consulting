name: Vercel Env (write-only)

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  sync-env:
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }} # teamId, можно пустым
      ORIGIN: ${{ secrets.ORIGIN }}              # https://cfg-consulting.vercel.app
      APPS_SCRIPT_URL: ${{ secrets.APPS_SCRIPT_URL }}
      CFG_KEY: ${{ secrets.CFG_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Upsert envs (write-only, tolerate 409 / ENV_ALREADY_EXISTS)
        shell: bash
        run: |
          set -euo pipefail

          # Сборка URL с teamId при наличии
          BASE="https://api.vercel.com/v9/projects/${VERCEL_PROJECT_ID}/env"
          if [[ -n "${VERCEL_ORG_ID:-}" ]]; then
            ENV_URL="${BASE}?teamId=${VERCEL_ORG_ID}"
          else
            ENV_URL="${BASE}"
          fi

          upsert () {
            local KEY="$1"
            local VAL="$2"

            if [[ -z "${VAL}" ]]; then
              echo "warning: Secret $KEY is empty. Skipping."
              return 0
            fi

            # JSON-пейлоад. ВАЖНО: type обязателен для этого эндпоинта
            PAYLOAD=$(jq -n \
              --arg key "$KEY" \
              --arg value "$VAL" \
              '{key:$key, value:$value, target:["production","preview"], type:"encrypted"}')

            # Выполняем запрос и собираем код/тело
            HTTP_CODE=$(curl -sS -w '%{http_code}' -o /tmp/body.json -X POST "$ENV_URL" \
              -H "Authorization: Bearer ${VERCEL_TOKEN}" \
              -H "Content-Type: application/json" \
              --data "$PAYLOAD")

            if [[ "$HTTP_CODE" == "200" || "$HTTP_CODE" == "201" ]]; then
              echo "upsert $KEY: OK"
            elif [[ "$HTTP_CODE" == "409" ]]; then
              if grep -q 'ENV_ALREADY_EXISTS' /tmp/body.json; then
                echo "upsert $KEY: already exists (409) -> OK"
              else
                echo "upsert $KEY: 409 (not ENV_ALREADY_EXISTS). Body:"; cat /tmp/body.json; exit 1
              fi
            else
              echo "upsert $KEY failed. HTTP $HTTP_CODE. Response body:"; cat /tmp/body.json; exit 1
            fi
          }

          echo "Project=${VERCEL_PROJECT_ID}  Team=${VERCEL_ORG_ID:-<none>}"
          upsert ORIGIN "${ORIGIN}"
          upsert APPS_SCRIPT_URL "${APPS_SCRIPT_URL}"
          upsert CFG_KEY "${CFG_KEY}"
